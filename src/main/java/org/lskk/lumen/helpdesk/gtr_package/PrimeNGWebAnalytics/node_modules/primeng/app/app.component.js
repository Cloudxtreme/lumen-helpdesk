"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var http_1 = require('@angular/http');
var http_2 = require('@angular/http');
require('rxjs/add/operator/toPromise');
var AppComponent = (function () {
    function AppComponent(http) {
        this.http = http;
        this.monthTopic = "1";
        this.yearTopic = "2016";
        this.monthArea = "1";
        this.yearArea = "2016";
        this.yearPerMonth = "2016";
        this.monthPerDay = "1";
        this.yearPerDay = "2016";
        this.dataTopic = {
            'labels': ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'],
            'datasets': [
                {
                    'label': 'First Dataset',
                    'data': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                }
            ]
        };
        this.dataArea = {
            'labels': ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'],
            'datasets': [
                {
                    'label': 'First Dataset',
                    'data': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                }
            ]
        };
        this.dataPerMonth = {
            'labels': ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'],
            'datasets': [
                {
                    'label': 'First Dataset',
                    'data': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                }
            ]
        };
        this.dataPerDay = {
            'labels': ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'],
            'datasets': [
                {
                    'label': 'First Dataset',
                    'data': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                }
            ]
        };
        this.topicsMonths = [];
        this.topicsMonths.push({ label: "January", value: 1 });
        this.topicsMonths.push({ label: "February", value: 2 });
        this.topicsMonths.push({ label: "March", value: 3 });
        this.topicsMonths.push({ label: "April", value: 4 });
        this.topicsMonths.push({ label: "May", value: 5 });
        this.topicsMonths.push({ label: "June", value: 6 });
        this.topicsMonths.push({ label: "July", value: 7 });
        this.topicsMonths.push({ label: "August", value: 8 });
        this.topicsMonths.push({ label: "September", value: 9 });
        this.topicsMonths.push({ label: "October", value: 10 });
        this.topicsMonths.push({ label: "November", value: 11 });
        this.topicsMonths.push({ label: "December", value: 12 });
        this.topicsYears = [];
        this.topicsYears.push({ label: "2016", value: 2016 });
        this.topicsYears.push({ label: "2015", value: 2015 });
        this.topicsYears.push({ label: "2014", value: 2014 });
        this.topicsYears.push({ label: "2013", value: 2013 });
        this.topicsYears.push({ label: "2012", value: 2012 });
        this.topicsYears.push({ label: "2011", value: 2011 });
        this.topicsYears.push({ label: "2010", value: 2010 });
        this.topicsYears.push({ label: "2009", value: 2009 });
        this.topicsYears.push({ label: "2008", value: 2008 });
        this.topicsYears.push({ label: "2007", value: 2007 });
        this.areasMonths = [];
        this.areasMonths.push({ label: "January", value: 1 });
        this.areasMonths.push({ label: "February", value: 2 });
        this.areasMonths.push({ label: "March", value: 3 });
        this.areasMonths.push({ label: "April", value: 4 });
        this.areasMonths.push({ label: "May", value: 5 });
        this.areasMonths.push({ label: "June", value: 6 });
        this.areasMonths.push({ label: "July", value: 7 });
        this.areasMonths.push({ label: "August", value: 8 });
        this.areasMonths.push({ label: "September", value: 9 });
        this.areasMonths.push({ label: "October", value: 10 });
        this.areasMonths.push({ label: "November", value: 11 });
        this.areasMonths.push({ label: "December", value: 12 });
        this.areasYears = [];
        this.areasYears.push({ label: "2016", value: 2016 });
        this.areasYears.push({ label: "2015", value: 2015 });
        this.areasYears.push({ label: "2014", value: 2014 });
        this.areasYears.push({ label: "2013", value: 2013 });
        this.areasYears.push({ label: "2012", value: 2012 });
        this.areasYears.push({ label: "2011", value: 2011 });
        this.areasYears.push({ label: "2010", value: 2010 });
        this.areasYears.push({ label: "2009", value: 2009 });
        this.areasYears.push({ label: "2008", value: 2008 });
        this.areasYears.push({ label: "2007", value: 2007 });
        this.perMonthYears = [];
        this.perMonthYears.push({ label: "2016", value: 2016 });
        this.perMonthYears.push({ label: "2015", value: 2015 });
        this.perMonthYears.push({ label: "2014", value: 2014 });
        this.perMonthYears.push({ label: "2013", value: 2013 });
        this.perMonthYears.push({ label: "2012", value: 2012 });
        this.perMonthYears.push({ label: "2011", value: 2011 });
        this.perMonthYears.push({ label: "2010", value: 2010 });
        this.perMonthYears.push({ label: "2009", value: 2009 });
        this.perMonthYears.push({ label: "2008", value: 2008 });
        this.perMonthYears.push({ label: "2007", value: 2007 });
        this.perDayMonths = [];
        this.perDayMonths.push({ label: "January", value: 1 });
        this.perDayMonths.push({ label: "February", value: 2 });
        this.perDayMonths.push({ label: "March", value: 3 });
        this.perDayMonths.push({ label: "April", value: 4 });
        this.perDayMonths.push({ label: "May", value: 5 });
        this.perDayMonths.push({ label: "June", value: 6 });
        this.perDayMonths.push({ label: "July", value: 7 });
        this.perDayMonths.push({ label: "August", value: 8 });
        this.perDayMonths.push({ label: "September", value: 9 });
        this.perDayMonths.push({ label: "October", value: 10 });
        this.perDayMonths.push({ label: "November", value: 11 });
        this.perDayMonths.push({ label: "December", value: 12 });
        this.perDayYears = [];
        this.perDayYears.push({ label: "2016", value: 2016 });
        this.perDayYears.push({ label: "2015", value: 2015 });
        this.perDayYears.push({ label: "2014", value: 2014 });
        this.perDayYears.push({ label: "2013", value: 2013 });
        this.perDayYears.push({ label: "2012", value: 2012 });
        this.perDayYears.push({ label: "2011", value: 2011 });
        this.perDayYears.push({ label: "2010", value: 2010 });
        this.perDayYears.push({ label: "2009", value: 2009 });
        this.perDayYears.push({ label: "2008", value: 2008 });
        this.perDayYears.push({ label: "2007", value: 2007 });
    }
    AppComponent.prototype.ngOnInit = function () {
    };
    AppComponent.prototype.onclicktopic = function () {
        var _this = this;
        if (this.topic != "undefined" && this.topic != "" && this.topic != null) {
            var params = new http_2.URLSearchParams();
            params.set("month", this.monthTopic);
            params.set("year", this.yearTopic);
            params.set("topics", this.topic);
            this.http.get("http://localhost:8116/mostMentionedTopics", { search: params }).
                subscribe(function (data) { _this.dataTopic = JSON.parse(data['_body']); }, function (err) { return console.error(err); }, function () { return console.log("done"); });
        }
        else {
            alert("Please Fill In The Topic Box");
        }
    };
    AppComponent.prototype.onclickarea = function () {
        var _this = this;
        if (this.area != "undefined" && this.area != "" && this.area != null) {
            var params = new http_2.URLSearchParams();
            params.set("month", this.monthArea);
            params.set("year", this.yearArea);
            params.set("areas", this.area);
            this.http.get("http://localhost:8116/mostMentionedAreas", { search: params }).
                subscribe(function (data) { _this.dataArea = JSON.parse(data['_body']); }, function (err) { return console.error(err); }, function () { return console.log("done"); });
        }
        else {
            alert("Please Fill In The Area Box");
        }
    };
    AppComponent.prototype.onclickpermonth = function () {
        var _this = this;
        var params = new http_2.URLSearchParams();
        params.set("year", this.yearPerMonth);
        this.http.get("http://localhost:8116/totalCasePerMonth", { search: params }).
            subscribe(function (data) { _this.dataPerMonth = JSON.parse(data['_body']); }, function (err) { return console.error(err); }, function () { return console.log("done"); });
    };
    AppComponent.prototype.onclickperday = function () {
        var _this = this;
        var params = new http_2.URLSearchParams();
        params.set("month", this.monthPerDay);
        params.set("year", this.yearPerDay);
        this.http.get("http://localhost:8116/totalCasePerDay", { search: params }).
            subscribe(function (data) { _this.dataPerDay = JSON.parse(data['_body']); }, function (err) { return console.error(err); }, function () { return console.log("done"); });
    };
    AppComponent = __decorate([
        core_1.Component({
            selector: 'my-app',
            templateUrl: './app/app.component.html',
        }), 
        __metadata('design:paramtypes', [http_1.Http])
    ], AppComponent);
    return AppComponent;
}());
exports.AppComponent = AppComponent;
//# sourceMappingURL=app.component.js.map